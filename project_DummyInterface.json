{

    "MqttBridge":
    {
        "class":      "MqttBridge.MqttBridge.MqttBridge",
        "interfaces":
        {
            "Mosquitto":
            {
                "connection":   "Interface.Ethernet.MqttBrokerInterface.MqttBrokerInterface",
                "port":         1883,
                "sendRetained": false                       # for tests you can send not retained
            }
        }
    },

    "Logger":
    {
     "projectName":   "AccuTester"
     },

    "WrEffektaWest":
    {
        "class":        "Inverter.EffektaController.EffektaController",
        "interfaces":
        {
            "UartWrEffektaWest":
            {
                #"connection":   "Interface.Uart.EffektaUartInterface.EffektaUartInterface",
                "connection":   "Interface.Uart.DummyEffektaUartInterface.DummyEffektaUartInterface",
                "interface":    "COM4",
                "baudrate":     2400
            }
        }
    },

    "BMS":
    {
        "class":        "BMS.WBMS.WBMS",
        "interfaces":
        {
            "UartBMS":
            {
                #"connection":   "Interface.Uart.WBmsUartInterface.WBmsUartInterface",
                "connection":   "Interface.Uart.DummyWBmsUartInterface.DummyWBmsUartInterface",
                "interface":    "COM4",
                "baudrate":     2400
            }
        }
    },

    "SocMonitor":
    {
        "class":        "GridLoad.SocMeter.SocMeter",
        "interfaces":
        {
            "UartSocMonitor":
            {
                #"connection":   "Interface.Uart.BasicUartInterface.SocMeterUartInterface",
                "connection":   "Interface.Uart.DummySocMeterUartInterface.DummySocMeterUartInterface",
                "interface":    "COM4",
                "baudrate":     9600
            }
        }
    },

    "UsbRelais":
    {
        "class":        "GPIO.UsbRelais.UsbRelais",
        "interfaces":
        {
            "UartUsbRelais":
            {
                #"connection":   "Interface.Uart.UsbRelaisUartInterface.UsbRelaisUartInterface",
                "connection":   "Interface.Uart.UartInterface.UartInterface",
                "interface":    "COM7",
                "baudrate":     115200
            }
        }
    },

#    "WatchDog":
#    {
#        "class":      "WatchDog.WatchDog.WatchDog",
#        "interfaces":
#        {
#        },
#        "setupTime":       20,              # additional time until first check if all threads and only these are registered to give the threads some time to come up (timeout will happen after setupTime + triggerTime + timeout)
#        "triggerTime":     10,              # after that time threads should start sending alive message to watch dog
#        "timeout":         10,              # n seconds timeout after ticker time, after triggerTime + timeout watch dog will raise an Exception
#        "warningTime":     3,               # if minimum measured remaining timeout time is less or equal warningTime log a warning to inform the user about critical timing
#        "expectThreads":                    # expected threads
#        [
#            "Logger",
#            "PowerPlant",
#            "Mosquitto",
#            "MqttBridge",
#            "WrEffektaWest",
#            "BMS",
#            "SocMonitor",
#            "UsbRelais"
#        ],
#        "ignoreThreads":                    # no timeout monitoring for these ones... but they have to be included in expectedThreads
#        [
#            "UartWrEffektaWest",
#            "UartBMS",
#            "UartSocMonitor",
#            "UartUsbRelais",
#            "Wetter"
#        ],
#        "logUpTime":          60            # every 60 seconds create up time message
#    },

    "Wetter":
    {
        "class": "Weather.Weather.WetterOnline",
        "weatherUrl": "https://www.wetteronline.de/wetter/geratskirchen?prefpar=sun"
    }

}

